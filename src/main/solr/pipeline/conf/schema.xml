<?xml version="1.0" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<schema name="gene core" version="1.1">
  <types>
   <fieldtype name="string"  class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
   <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
   <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <!--<tokenizer class="solr.StandardTokenizerFactory"/>-->

        <!-- use KeywordTokenizerFactory so that no work splitting on punctuation, hyphen. Ie, does not split the input at all -->
        <tokenizer class="solr.KeywordTokenizerFactory" /> 
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>

        -->
        <filter class="solr.LowerCaseFilterFactory"/>
	    <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> <!-- added -->
      </analyzer>
      <analyzer type="query">
        <!--<tokenizer class="solr.StandardTokenizerFactory"/>-->

        <!-- use KeywordTokenizerFactory so that no work splitting on punctuation, hyphen. Ie, does not split the input at all -->
        <tokenizer class="solr.KeywordTokenizerFactory" /> 
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
	    <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> <!-- added -->
      </analyzer>
    </fieldType>

    <!-- Just like text_general except it reverses the characters of
	 each token, to enable more efficient leading wildcard queries. -->
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"
           maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <!-- to be used for autosuggest -->    
    <fieldType name="text_ngram" class="solr.TextField">
        <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>         
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="1" maxGramSize="25" side="front"/>        
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false" />
        </analyzer>
        <analyzer type="query"> 
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <!--<filter class="solr.KStemFilterFactory"/> -->
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/> 
        </analyzer>
    </fieldType>  

  </types>

  <fields>  
    <field name="_version_" type="long" indexed="true" stored="true"/> 
    <field name="parameter_stable_id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>
    <field name="parameter_name" type="string" indexed="true" stored="true" required="true" multiValued="false"/>	
    <field name="parameter_stable_key" type="int" indexed="true" stored="true" required="true" multiValued="false"/>	
	<field name="parameter_id" type="int" indexed="true" stored="true" required="true" multiValued="false"/>	

    <field name="procedure_stable_id" type="string" indexed="true" stored="true" required="true" />
    <field name="procedure_name" type="string" indexed="true" stored="true" required="true" />
    <field name="procedure_stable_key" type="int" indexed="true" stored="true" required="true" />
	<field name="procedure_id" type="int" indexed="true" stored="true" required="true" multiValued="true"/>
		
    <field name="pipeline_stable_id" type="string" indexed="true" stored="true" required="true" />    
    <field name="pipeline_name" type="string" indexed="true" stored="true" required="true" /> 
	<field name="pipeline_stable_key" type="string" indexed="true" stored="true" required="true" />  	
	<field name="pipeline_id" type="int" indexed="true" stored="true" required="true" multiValued="true"/>

	<field name="proc_param_stable_id" type="string" indexed="true" stored="true" required="true" multiValued="false"/>    
    <field name="proc_param_name" type="string" indexed="true" stored="true" required="true" multiValued="false"/>

     <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
   <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="auto_suggest" type="text_ngram" indexed="true" stored="false" multiValued="true"/>

   <!-- catchall text field that indexes tokens both normally and in reverse for efficient
        leading wildcard queries. -->
   <field name="text_rev" type="text_general_rev" indexed="true" stored="false" multiValued="true"/>

   
 </fields>

    <uniqueKey>parameter_stable_id</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>text</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->
  
  <!-- <copyField source="name" dest="text"/>-->
    <copyField source="*" dest="text"/>
   
   <copyField source="parameter_stable_id"  dest="auto_suggest" />
   <copyField source="parameter_name"  dest="auto_suggest" />	 
   <copyField source="procedure_stable_id" dest="auto_suggest" />
   <copyField source="procedure_name"  dest="auto_suggest" /> 
   <copyField source="pipeline_stable_id"  dest="auto_suggest" /> 
   <copyField source="pipeline_name"  dest="auto_suggest" />  
	
</schema>

