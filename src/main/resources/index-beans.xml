<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		">

    <context:annotation-config />


    <bean id="dccConvertMap" class="uk.ac.ebi.phenotype.data.imits.EncodedOrganisationConversionMap" />

    <!-- Get the datasources from the filesystem overrides -->
    <!-- Creates a MySQL Datasource -->
    <bean id="komp2DataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${komp2url}" />
        <property name="username" value="${komp2username}" />
        <property name="password" value="${komp2password}" />
    </bean>
    
    <!-- <bean id="admintoolsDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${admintoolsurl}" />
        <property name="username" value="${admintoolsusername}" />
        <property name="password" value="${admintoolspassword}" />
    </bean> -->
    
    <bean id="ontodbDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${ontodburl}" />
        <property name="username" value="${ontodbusername}" />
        <property name="password" value="${ontodbpassword}" />
    </bean>
    
    <bean id="goaproDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="url" value="${goaprourl}" />
        <property name="username" value="${goaprousername}" />
        <property name="password" value="${goapropassword}" />
    </bean>
    
     <bean id="uniprotDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="url" value="${uniproturl}" />
        <property name="username" value="${uniprotusername}" />
        <property name="password" value="${uniprotpassword}" />
    </bean>
    
     <bean id="pfamDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="url" value="${pfamurl}" />
        <property name="username" value="${pfamusername}" />
        <property name="password" value="${pfampassword}" />
    </bean>
    

    <!-- Weaves in transactional advice around annotated Transactional methods -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Drives transactions using Hibernate APIs when requested -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
    <bean  class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!-- Spring annotated objects -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="komp2DataSource" />
        <property name="packagesToScan" value="uk.ac.ebi.phenotype" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.useUnicode">true</prop>
                <prop key="hibernate.connection.charSet">UTF8</prop>
            </props>
        </property>
    </bean>

    <!-- phenodigm external solr server via HTTP -->
    <bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
        <constructor-arg index="0" value="${phenodigm.solrserver}" />
        <property name="soTimeout" value="5000" />
    </bean>

    <!--  Beans for writing to the solr servers -->
    <bean id="alleleIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/allele"/>
        <constructor-arg index="1" value="10000"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>

    <bean id="preqcIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/preqc"/>
        <constructor-arg index="1" value="10000"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>
    
    <bean id="preqcReadOnlyIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${internalSolrUrl}/preqc"/>
        <constructor-arg index="1" value="10000"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the experiment core -->
    <bean id="observationIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/experiment"/>
        <constructor-arg index="1" value="100000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the MA core -->
    <bean id="maIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/ma"/>
        <constructor-arg index="1" value="100000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the disease core -->
    <bean id="diseaseIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/disease"/>
        <constructor-arg index="1" value="1000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the gene core -->
    <bean id="geneIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/gene"/>
        <constructor-arg index="1" value="1000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the genotype phenotype core -->
    <bean id="genotypePhenotypeIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/genotype-phenotype"/>
        <constructor-arg index="1" value="1000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

	<!-- used for concurrently loading the genotype phenotype core -->
    <bean id="genotypePhenotypeReadOnlyIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${internalSolrUrl}/genotype-phenotype"/>
        <constructor-arg index="1" value="1000"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the pipeline core -->
    <bean id="pipelineIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/pipeline"/>
        <constructor-arg index="1" value="500"/> <!--Queue size-->
        <constructor-arg index="2" value="5"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the samger images (or just images) core -->
    <bean id="sangerImagesIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/images"/>
        <constructor-arg index="1" value="2000"/> <!--Queue size-->
        <constructor-arg index="2" value="2"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the MP core -->
    <bean id="mpIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/mp"/>
        <constructor-arg index="1" value="200"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the autosuggest core -->
    <bean id="autosuggestIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/autosuggest"/>
        <constructor-arg index="1" value="1000"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>

    <!-- used for concurrently loading the impc_images core -->
    <bean id="impcImagesIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/impc_images"/>
        <constructor-arg index="1" value="10000"/> <!--Queue size-->
        <constructor-arg index="2" value="3"/> <!--Num threads-->
    </bean>
    
    <bean id="hpOntologyService" class="uk.ac.ebi.phenotype.service.HpOntologyService" />
    <bean id="maOntologyService" class="uk.ac.ebi.phenotype.service.MaOntologyService" />
    <bean id="mpOntologyService" class="uk.ac.ebi.phenotype.service.MpOntologyService" />
    <bean id="mpathOntologyService" class="uk.ac.ebi.phenotype.service.MpathOntologyService" />

    <!-- used for concurrently loading the statistical results core -->
    <bean id="statisticalResultsIndexing" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
        <constructor-arg index="0" value="${buildIndexesSolrUrl}/statistical-result"/>
        <constructor-arg index="1" value="50000"/> <!--Queue size-->
        <constructor-arg index="2" value="6"/> <!--Num threads-->
    </bean>



    <!-- Global configuration parameters -->
    <bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="targetMapClass">
            <value>java.util.HashMap</value>
        </property>
        <property name="sourceMap">
            <map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="version" value="${pom.version}" />
                <entry key="baseUrl" value="${baseUrl}" />
                <entry key="drupalBaseUrl" value="${drupalBaseUrl}" />
                <entry key="solrUrl" value="${solrUrl}" />
                <entry key="internalSolrUrl" value="${internalSolrUrl}" />
                <entry key="mediaBaseUrl" value="${mediaBaseUrl}" />
                <entry key="impcMediaBaseUrl" value="${impcMediaBaseUrl}" />
                <entry key="googleAnalytics" value="${googleAnalytics}" />
                <entry key="liveSite" value="${liveSite}" />
                <entry key="preqcXmlFilename" value="${preqcXmlfile}" />
                <entry key="human2mouseFilename" value="${human2mouseFile}" />
                <entry key="phenodigm.solrserver" value="${phenodigm.solrserver}" />
                <entry key="imits.solrserver" value="${imits.solrserver}" />
                <entry key="buildIndexesSolrUrl" value="${buildIndexesSolrUrl}" />
            </map>
        </property>
    </bean>
        
    <!-- core indexer beans -->

    <!-- used for concurrently loading the impc_images core -->
    <bean id="observationIndexer" class="uk.ac.ebi.phenotype.solr.indexer.ObservationIndexer" />
    <bean id="genotypePhenotypeIndexer" class="uk.ac.ebi.phenotype.solr.indexer.GenotypePhenotypeIndexer" />
    <bean id="statisticalResultIndexer" class="uk.ac.ebi.phenotype.solr.indexer.StatisticalResultIndexer" />
    <bean id="preqcIndexer" class="uk.ac.ebi.phenotype.solr.indexer.PreqcIndexer" />
    <bean id="alleleIndexer" class="uk.ac.ebi.phenotype.solr.indexer.AlleleIndexer" />
    <bean id="imagesIndexer" class="uk.ac.ebi.phenotype.solr.indexer.SangerImagesIndexer" />
    <bean id="impcImagesIndexer" class="uk.ac.ebi.phenotype.solr.indexer.ImpcImagesIndexer" />
    <bean id="mpIndexer" class="uk.ac.ebi.phenotype.solr.indexer.MPIndexer" />
    <bean id="maIndexer" class="uk.ac.ebi.phenotype.solr.indexer.MAIndexer" />
    <bean id="pipelineIndexer" class="uk.ac.ebi.phenotype.solr.indexer.PipelineIndexer" />
    <bean id="geneIndexer" class="uk.ac.ebi.phenotype.solr.indexer.GeneIndexer" />
    <bean id="diseaseIndexer" class="uk.ac.ebi.phenotype.solr.indexer.DiseaseIndexer" />
    <bean id="autosuggestIndexer" class="uk.ac.ebi.phenotype.solr.indexer.AutosuggestIndexer" />
    

</beans>



