<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Define the global parameters used when deploying without maven -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:appConfig.properties</value>
			</list>
		</property>
	</bean>

	<context:component-scan base-package="uk.ac.ebi" />

	<context:annotation-config/>

	<!-- Weaves in transactional advice around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

<bean id="genotypePhenotypeService" class="uk.ac.ebi.phenotype.stats.GenotypePhenotypeService">
				<constructor-arg  value="${internalSolrUrl}/genotype-phenotype" />
	</bean>
	
	<bean id="biologicalModelDAO" class="uk.ac.ebi.phenotype.dao.BiologicalModelDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="observationDAO" class="uk.ac.ebi.phenotype.dao.ObservationDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="phenotypeCallSummaryDAO" class="uk.ac.ebi.phenotype.dao.PhenotypeCallSummaryDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="phenotypeCallSummaryDAOSolr" class="uk.ac.ebi.phenotype.pojo.PhenotypeCallSummarySolrImpl">
	</bean>
	
	<bean id="phenotypePipelineDAO" class="uk.ac.ebi.phenotype.dao.PhenotypePipelineDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="alleleDAO" class="uk.ac.ebi.phenotype.dao.AlleleDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="genomicFeatureDAO" class="uk.ac.ebi.phenotype.dao.GenomicFeatureDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="ontologyTermDAO" class="uk.ac.ebi.phenotype.dao.OntologyTermDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="sequenceRegionDAO" class="uk.ac.ebi.phenotype.dao.SequenceRegionDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="coordinateSystemDAO" class="uk.ac.ebi.phenotype.dao.CoordinateSystemDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="strainDAO" class="uk.ac.ebi.phenotype.dao.StrainDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="datasourceDAO" class="uk.ac.ebi.phenotype.dao.DatasourceDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="labcodeDAO" class="uk.ac.ebi.phenotype.dao.LabcodeDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="projectDAO" class="uk.ac.ebi.phenotype.dao.ProjectDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="organisationDAO" class="uk.ac.ebi.phenotype.dao.OrganisationDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>	
	
	<bean id="categoricalStatisticsDAO" class="uk.ac.ebi.phenotype.dao.CategoricalStatisticsDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
	
	<bean id="unidimensionalStatisticsDAO" class="uk.ac.ebi.phenotype.dao.UnidimensionalStatisticsDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
	
	<bean id="timeSeriesStatisticsDAO" class="uk.ac.ebi.phenotype.dao.TimeSeriesStatisticsDAOImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>
	

	<bean id="imagingSourceManager" class="uk.ac.ebi.phenotype.imaging.springrest.images.dao.HibernateImagesDao">
		<constructor-arg ref="sessionFactory" />
		<constructor-arg ref="imagesSolrDao" />
	</bean>

	<bean id="imagesSolrDao" class="uk.ac.ebi.phenotype.imaging.springrest.images.dao.ImagesSolrJ">
		<constructor-arg name="solrBaseUrl" value="http://wwwdev.ebi.ac.uk/mi/solr/images" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="komp2DataSource"/>
		<property name="packagesToScan" value="uk.ac.ebi.phenotype"/>
		<property name="hibernateProperties">
      		<props>
             	<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            	<prop key="hibernate.show_sql">false</prop>
            	<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.charSet">UTF8</prop>
        </props>
    </property>
	</bean>

	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
		
	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<import resource="datasources-config.xml"/>
	
	<bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="baseUrl" value="${baseUrl}" />
				<entry key="drupalBaseUrl" value="${drupalBaseUrl}" />
				<entry key="solrUrl" value="${solrUrl}" />
				<entry key="internalSolrUrl" value="${internalSolrUrl}" />
				<entry key="mediaBaseUrl" value="${mediaBaseUrl}" />
				<entry key="googleAnalytics" value="${googleAnalytics}" />
				<entry key="liveSite" value="${liveSite}" />
			</map>
		</property>
	</bean>

</beans>